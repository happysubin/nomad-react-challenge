{"version":3,"sources":["assets/noPosterSmall.jpg","Component/GlobalStyles.js","api.js","Component/Loader.js","Component/Section.js","Component/Poster.js","Component/Message.js","Screen/Search.js","Screen/Tv.js","Screen/Movie.js","Component/Header.js","Component/Season.js","Screen/Detail.js","Component/Router.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","reset","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Loader","role","Title","span","Grid","Section","title","children","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","Text","color","Message","text","Form","form","Input","input","SearchBox","useState","Term","loading","tvResult","movieResult","searchTerm","setSearchTerm","search","a","data","results","console","log","handleSubmit","event","preventDefault","updateTerm","value","target","useSearch","Helmet","onSubmit","placeholder","onChange","map","movie","poster_path","vote_average","original_title","release_date","substr","show","original_name","first_air_date","TvBox","topRated","popular","airingToday","state","setState","useEffect","fetchTv","useTv","tv","MovieBox","nowPlaying","upcoming","fetchMovie","useMovie","HeaderContainer","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","p","Img","img","Season","name","poster","src","alt","BackDrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","SeasonContainer","Button","button","Detail","match","path","includes","fetchDetail","useDetail","result","tabs","setTabs","useTabs","season","setSeason","useSeason","backdrop_path","runtime","episode_run_time","genres","genre","index","href","imdb_id","overview","onClick","videos","key","isVideo","production_countries","iso_3166_1","production_companies","seasons","width","frameborder","content","HomeRouter","exact","component","from","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.908f74e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.4a1d4524.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n    \r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, rating, title, year, isMovie }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.jpg\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { moviesApi, tvApi } from \"../api\";\r\nimport Loader from \"../Component/Loader\";\r\nimport Section from \"../Component/Section\";\r\nimport Poster from \"../Component/Poster\";\r\nimport Message from \"../Component/Message\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst useSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState({\r\n    Term: \"\",\r\n    loading: false,\r\n    tvResult: null,\r\n    movieResult: null,\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.Term !== \"\") {\r\n      search(searchTerm.Term);\r\n    }\r\n  };\r\n  //submit되는 순간 실행된다.\r\n\r\n  const updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    setSearchTerm({ Term: value });\r\n  };\r\n  //우리는  input의 값이 바뀌는 순간마다 이 함수를 실행. 계속 setSearchTerm 으로 state를 바꾼다. submit와는 다름\r\n  const search = async (term) => {\r\n    try {\r\n      setSearchTerm({ loading: true });\r\n\r\n      const {\r\n        data: { results: tvResult },\r\n      } = await tvApi.search(term);\r\n      const {\r\n        data: { results: movieResult },\r\n      } = await moviesApi.search(term);\r\n      console.log(movieResult);\r\n      setSearchTerm({ tvResult, movieResult, loading: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return { handleSubmit, updateTerm, searchTerm };\r\n};\r\n\r\nconst SearchBox = () => {\r\n  const {\r\n    handleSubmit,\r\n    updateTerm,\r\n    searchTerm: { loading, movieResult, tvResult, Term },\r\n  } = useSearch();\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Suflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Searches.. Movies or Shows\"\r\n          value={Term}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResult && movieResult.length > 0 && (\r\n            <Section>\r\n              {movieResult.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  title={movie.original_title}\r\n                  year={movie.release_date.substr(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResult && tvResult.length > 0 && (\r\n            <Section>\r\n              {tvResult.map((show) => (\r\n                <Poster\r\n                  id={show.id}\r\n                  key={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_name}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date\r\n                      ? show.first_air_date.substring(0, 4)\r\n                      : \"\"\r\n                  }\r\n                  isMovie={false}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResult &&\r\n            movieResult &&\r\n            tvResult.length < 1 &&\r\n            movieResult.length < 1 && (\r\n              <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { tvApi } from \"../api\";\r\nimport Loader from \"../Component/Loader\";\r\nimport Message from \"../Component/Message\";\r\nimport Poster from \"../Component/Poster\";\r\nimport Section from \"../Component/Section\";\r\n\r\nconst useTv = () => {\r\n  const [state, setState] = useState({\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    const fetchTv = async () => {\r\n      try {\r\n        const {\r\n          data: { results: topRated },\r\n        } = await tvApi.topRated();\r\n        const {\r\n          data: { results: popular },\r\n        } = await tvApi.popular();\r\n        const {\r\n          data: { results: airingToday },\r\n        } = await tvApi.airingToday();\r\n        setState({ airingToday, topRated, popular, loading: false });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchTv();\r\n  }, []);\r\n  return state;\r\n};\r\n\r\nconst TvBox = () => {\r\n  const { loading, airingToday, topRated, popular } = useTv();\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading.. | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <Helmet>\r\n        <title>Tv | Nomflix</title>\r\n      </Helmet>\r\n      <Section>\r\n        {airingToday &&\r\n          airingToday.length > 0 &&\r\n          airingToday.map((tv) => (\r\n            <Poster\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              id={tv.id}\r\n              key={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              year={tv.first_air_date ? tv.first_air_date.substr(0, 4) : \"\"}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n      </Section>\r\n      <Section>\r\n        {topRated &&\r\n          topRated.length > 0 &&\r\n          topRated.map((tv) => (\r\n            <Poster\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              id={tv.id}\r\n              key={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              year={tv.first_air_date ? tv.first_air_date.substr(0, 4) : \"\"}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n      </Section>\r\n      <Section>\r\n        {popular &&\r\n          popular.length > 0 &&\r\n          popular.map((tv) => (\r\n            <Poster\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              id={tv.id}\r\n              key={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              year={tv.first_air_date ? tv.first_air_date.substr(0, 4) : \"\"}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\nexport default TvBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport { moviesApi } from \"../api\";\r\nimport Loader from \"../Component/Loader\";\r\nimport Poster from \"../Component/Poster\";\r\nimport Section from \"../Component/Section\";\r\n\r\nconst useMovie = () => {\r\n  const [state, setState] = useState({\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const {\r\n          data: { results: popular },\r\n        } = await moviesApi.popular();\r\n        const {\r\n          data: { results: upcoming },\r\n        } = await moviesApi.upcoming();\r\n        const {\r\n          data: { results: nowPlaying },\r\n        } = await moviesApi.nowPlaying();\r\n        setState({ popular, upcoming, nowPlaying, loading: false });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchMovie();\r\n  }, []);\r\n  return state;\r\n};\r\n\r\nconst MovieBox = () => {\r\n  const { nowPlaying, upcoming, popular, loading } = useMovie();\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading.. | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      <Section>\r\n        {nowPlaying &&\r\n          nowPlaying.length > 0 &&\r\n          nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              title={movie.original_title}\r\n              year={movie.release_date.substr(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n      </Section>\r\n      <Section>\r\n        {upcoming &&\r\n          upcoming.length > 0 &&\r\n          upcoming.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              title={movie.original_title}\r\n              year={movie.release_date.substr(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n      </Section>\r\n      <Section>\r\n        {popular &&\r\n          popular.length > 0 &&\r\n          popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              title={movie.original_title}\r\n              year={movie.release_date.substr(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieBox;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n//withRouter 는 라우트로 사용된 컴포넌트가 아니어도 match, location, history 객체를 접근할 수 있게 도와줍니다.\r\n//withRouter 는 Router 외부에서 사용할 수 없습니다.\r\nconst Header = ({ location: { pathname } }) => (\r\n  <HeaderContainer>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </HeaderContainer>\r\n);\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 15px 0px 0px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  margin-bottom: 15px;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Season = ({ name, poster }) => (\r\n  <Container>\r\n    <Title>{name}</Title>\r\n    <Img\r\n      src={`https://image.tmdb.org/t/p/original/${poster}`}\r\n      alt=\"no Image\"\r\n    ></Img>\r\n  </Container>\r\n);\r\n\r\nexport default Season;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { moviesApi, tvApi } from \"../api\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../Component/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Season from \"../Component/Season\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst SeasonContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: transparent;\r\n  color: white;\r\n  margin-bottom: 10px;\r\n`;\r\nconst useDetail = (id, path) => {\r\n  const [state, setState] = useState({\r\n    loading: true,\r\n    data: null,\r\n    isMovie: path.includes(\"/movie\"),\r\n  });\r\n  useEffect(() => {\r\n    const fetchDetail = async () => {\r\n      try {\r\n        if (state.isMovie) {\r\n          const { data } = await moviesApi.movieDetail(id);\r\n          setState({ data, loading: false });\r\n        } else {\r\n          const { data } = await tvApi.showDetail(id);\r\n          setState({ data, loading: false });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchDetail();\r\n  }, []);\r\n  return state;\r\n};\r\n\r\nconst useTabs = () => {\r\n  const [tabs, setTabs] = useState();\r\n\r\n  return { tabs, setTabs };\r\n};\r\n\r\nconst useSeason = () => {\r\n  const [season, setSeason] = useState();\r\n  return { season, setSeason };\r\n};\r\n\r\nconst Detail = (props) => {\r\n  const {\r\n    match: {\r\n      path,\r\n      params: { id },\r\n    },\r\n  } = props;\r\n  const { loading, data: result } = useDetail(id, path);\r\n  const { tabs, setTabs } = useTabs();\r\n  const { season, setSeason } = useSeason();\r\n  console.log(result);\r\n  console.log(tabs);\r\n  console.log(season);\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <BackDrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../assets/noPosterSmall.jpg\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.runtime\r\n                ? result.runtime\r\n                : result.episode_run_time\r\n                ? result.episode_run_time[0]\r\n                : \"\"}{\" \"}\r\n              min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              <a href={`https://www.imdb.com/title/${result.imdb_id}`}>\r\n                GO IMDB\r\n              </a>\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n          <ItemContainer>\r\n            <List>\r\n              <Item>\r\n                <Button\r\n                  onClick={() =>\r\n                    result.videos.results.length !== 0\r\n                      ? setTabs({\r\n                          value: result.videos.results[0].key,\r\n                          isVideo: true,\r\n                        })\r\n                      : setTabs()\r\n                  }\r\n                >\r\n                  Video\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    setTabs({\r\n                      value: result.production_countries[0].iso_3166_1,\r\n                      isVideo: false,\r\n                    })\r\n                  }\r\n                >\r\n                  Production_countries\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    result.production_companies.length !== 0\r\n                      ? setTabs({\r\n                          value: result.production_companies[0].name,\r\n                          isVideo: false,\r\n                        })\r\n                      : setTabs()\r\n                  }\r\n                >\r\n                  Production_Company\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    result.seasons ? setSeason(result.seasons) : setSeason()\r\n                  }\r\n                >\r\n                  Season\r\n                </Button>\r\n              </Item>\r\n            </List>\r\n          </ItemContainer>\r\n          {tabs ? (\r\n            tabs.isVideo ? (\r\n              <iframe\r\n                width=\"300\"\r\n                src={`https://www.youtube.com/embed/${tabs.value}?rel=0&amp;autoplay=1&mute=1&amp;loop=1;playlist=${tabs.value}`}\r\n                frameborder=\"0\"\r\n              ></iframe>\r\n            ) : (\r\n              <p>{tabs.value}</p>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <SeasonContainer>\r\n            {season &&\r\n              season.length > 0 &&\r\n              season.map((content) => (\r\n                <Season name={content.name} poster={content.poster_path} />\r\n              ))}\r\n          </SeasonContainer>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\n/*\r\n<Item>\r\n              \r\n              {result.production_countries\r\n                ? result.production_countries[0].iso_3166_1\r\n                : \"\"}\r\n            </Item>\r\n*/\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport SearchBox from \"../Screen/Search\";\r\nimport TvBox from \"../Screen/Tv\";\r\nimport MovieBox from \"../Screen/Movie\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"../Screen/Detail\";\r\n\r\nconst HomeRouter = () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={MovieBox} />\r\n      <Route path=\"/tv\" component={TvBox} />\r\n      <Route path=\"/search\" component={SearchBox} />\r\n      <Route path=\"/show/:id\" exact component={Detail} />\r\n      <Route path=\"/movie/:id\" exact component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default HomeRouter;\r\n","import React from \"react\";\nimport GlobalStyles from \"./Component/GlobalStyles\";\nimport HomeRouter from \"./Component/Router\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <HomeRouter />;\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}